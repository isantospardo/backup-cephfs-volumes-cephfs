---
variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - build

.topic_branch_variables: &topic_branch_variables
  TAG: $CI_COMMIT_REF_NAME


.build_kaniko_command: &base
  stage: build
  image:
      # We recommend using the CERN version of the Kaniko image: gitlab-registry.cern.ch/ci-tools/docker-image-builder
      name: gitlab-registry.cern.ch/ci-tools/docker-image-builder
      entrypoint: [""]
  script:
      - export DATE=`date -u +%Y.%m.%dT%H-%M-%SZ`
      - export TAG=${TAG:-"RELEASE".$DATE}
      - export CONTEXT=${CONTEXT:-$CI_PROJECT_DIR}
      - export DOCKERFILE_PATH=${DOCKERFILE_PATH:-Dockerfile}
      - |
        export DOCKERFILE=$CONTEXT/$DOCKERFILE_PATH
        if ! [ -f "$DOCKERFILE" ]; then
          echo 'Dockerfile not found, please set both CONTEXT and DOCKERFILE_PATH properly' >&2
          exit 1
        fi
      # Prepare Kaniko configuration file:
      - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
      # Build and push the image from the Dockerfile at the root of the project.
      # To push to a specific docker tag, amend the --destination parameter, e.g. --destination $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME
      # See https://docs.gitlab.com/ee/ci/variables/predefined_variables.html#variables-reference for available variables
      - /kaniko/executor --context "$CONTEXT" --dockerfile "$CONTEXT/$DOCKERFILE_PATH" --destination "$CI_REGISTRY_IMAGE:$TAG"

Build Master:
  <<: *base
  only:
  - master

Build Topic Branch:
  <<: *base
  except:
  - master
  variables:
    <<: *topic_branch_variables